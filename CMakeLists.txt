cmake_minimum_required(VERSION 3.16.0)
project(Osiris)

if (NOT WIN32)
  set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -fvisibility=hidden -fno-exceptions -Wfatal-errors")
  set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -fno-rtti")
endif()

add_compile_options($<$<AND:$<CONFIG:Release>,$<CXX_COMPILER_ID:GNU>,$<C_COMPILER_ID:GNU>>:-s>)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
  set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} --no-gnu-unique")
endif()

file(GLOB_RECURSE SOURCES "${CMAKE_SOURCE_DIR}/Osiris/*.cpp")

if (NOT WIN32)
  list(REMOVE_ITEM SOURCES "${CMAKE_SOURCE_DIR}/Osiris/imgui/imgui_impl_dx9.cpp")
  list(REMOVE_ITEM SOURCES "${CMAKE_SOURCE_DIR}/Osiris/imgui/imgui_impl_win32.cpp")
  list(REMOVE_ITEM SOURCES "${CMAKE_SOURCE_DIR}/Osiris/Hooks/MinHook.cpp")
else()
  list(REMOVE_ITEM SOURCES "${CMAKE_SOURCE_DIR}/Osiris/imgui/imgui_impl_opengl3.cpp")
  list(REMOVE_ITEM SOURCES "${CMAKE_SOURCE_DIR}/Osiris/imgui/imgui_impl_sdl.cpp")
  list(APPEND SOURCES "${CMAKE_SOURCE_DIR}/Osiris/MinHook/buffer.c")
  list(APPEND SOURCES "${CMAKE_SOURCE_DIR}/Osiris/MinHook/hde/hde32.c")
  list(APPEND SOURCES "${CMAKE_SOURCE_DIR}/Osiris/MinHook/hde/hde64.c")
  list(APPEND SOURCES "${CMAKE_SOURCE_DIR}/Osiris/MinHook/hook.c")
  list(APPEND SOURCES "${CMAKE_SOURCE_DIR}/Osiris/MinHook/trampoline.c")
endif()

list(REMOVE_ITEM SOURCES "${CMAKE_SOURCE_DIR}/Osiris/pch.cpp") 
list(REMOVE_ITEM SOURCES "${CMAKE_SOURCE_DIR}/Osiris/Osiris.cpp")

add_library(OsirisOBJ OBJECT ${SOURCES})
set_target_properties(OsirisOBJ PROPERTIES POSITION_INDEPENDENT_CODE ON)
target_precompile_headers(OsirisOBJ PRIVATE "${CMAKE_SOURCE_DIR}/Osiris/pch.h")

if (NOT WIN32)
  find_package(Freetype REQUIRED)
  find_package(SDL2 REQUIRED)
  find_package(OpenGL REQUIRED)
  target_link_libraries(OsirisOBJ PRIVATE SDL2 GL ${CMAKE_DL_LIBS} Freetype::Freetype)
  target_include_directories(OsirisOBJ PRIVATE ${SDL2_INCLUDE_DIRS} ${FREETYPE_INCLUDE_DIRS})
  target_compile_options(OsirisOBJ PRIVATE -flto)
  target_link_options(OsirisOBJ PUBLIC -flto LINKER:--no-undefined)
else()
  target_compile_definitions(OsirisOBJ PRIVATE _USE_MATH_DEFINES)
  target_include_directories(OsirisOBJ PRIVATE "${CMAKE_SOURCE_DIR}/Osiris/freetype")
  target_compile_options(OsirisOBJ PRIVATE /utf-8)
  add_subdirectory(Osiris/freetype)
  target_link_libraries(OsirisOBJ PRIVATE FreeType)
  add_subdirectory(Osiris/Resources/Shaders)
  add_dependencies(OsirisOBJ Shaders)
endif()

add_library(Osiris SHARED "${CMAKE_SOURCE_DIR}/Osiris/Osiris.cpp")
target_link_libraries(Osiris PRIVATE OsirisOBJ)

if (NOT WIN32)
  target_link_options(Osiris PRIVATE -flto)
else()
  target_link_options(Osiris PRIVATE /ENTRY:DllEntryPoint)
endif()

option(BUILD_TESTS "Build unit tests" OFF)

if (BUILD_TESTS)
  enable_testing()
  add_subdirectory(Tests)
endif()
